Resources:
  UserLoginLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: UserLoginLambdaRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole

  UserLoginLambdaPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: UserLoginLambdaPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
                - dynamodb:DescribeTable
                - dynamodb:GetItem
                - dynamodb:Query
                - dynamodb:Scan
            Resource: arn:aws:dynamodb:*:*:table/UserLogin
      Roles:
        - !Ref LoginLambdaRole

  UserLoginTable:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      TableName: "UserLogin"
      AttributeDefinitions:
        - AttributeName: "id"
          AttributeType: "S"
        - AttributeName: "email"
          AttributeType: "S"
        - AttributeName: "password"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "id"
          KeyType: "HASH"
      SSESpecification:
        SSEEnabled: true


  GetUserLoginApi: 
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: prod

  UserLoginApiGatewayInvokeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: ApiGatewayInvokePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - execute-api:Invoke
                Resource: arn:aws:execute-api:*:*:*/*/GET/*
  
  UserLoginLambda:
    Type: AWS:Serverless::Function
    Properties:
      FunctionName: UserLoginLambda
      CodeUri: ../lambda-functions/get 
      Handler: GoForLoginLambda.handler
      Runtime: python3.8
      Role: !GetAtt UserLoginLambdaRole.Arn
      Environment:
        Variables:
          DYNAMODB_TABLE: !Ref UserLoginTable
      Timeout: 300
      MemorySize: 2048
      Events:
        LoginLambdaEvent:
          Type: HttpApi
          Properties:
            Path: /login
            Method: GET
            ApiId: !Ref GetUserLoginApi
            Auth:
              Authorizer: UserLoginApiGatewayInvokeRole

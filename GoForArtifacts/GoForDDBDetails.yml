Resources:
  GetGoforLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: GetGoforLambdaRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole

  GetGoforLambdaPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: GetGoforLambdaPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:GetItem
              - dynamodb:Query
            Resource: arn:aws:dynamodb:*:*:table/GoFor
      Roles:
        - !Ref GetGoforLambdaRole

  GoforLoginLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: GoforLoginLambdaRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole

  GoforLoginLambdaPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: GetGoforLambdaPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
                - dynamodb:DescribeTable
                - dynamodb:GetItem
                - dynamodb:PutItem
                - dynamodb:UpdateItem
                - dynamodb:DeleteItem
                - dynamodb:Query
                - dynamodb:Scan
            Resource: arn:aws:dynamodb:*:*:table/GoForLogin
      Roles:
        - !Ref GoforLoginLambdaRole

  GoForLoginTable:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      TableName: "GoForLogin"
      AttributeDefinitions:
        - AttributeName: "id"
          AttributeType: "S"
        - AttributeName: "email"
          AttributeType: "S"
        - AttributeName: "password"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "id"
          KeyType: "HASH"
      SSESpecification:
        SSEEnabled: true

  GoForTable:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      TableName: "GoFor"
      AttributeDefinitions:
        - AttributeName: "id"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "id"
          KeyType: "HASH"
      SSESpecification:
        SSEEnabled: true

  GetGoforApi: 
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: prod

  GetGoforLambda:
    Type: AWS:Serverless::Function
    Properties:
      FunctionName: GetGoforLambda
      Handler: 
      Runtime: java8
      CodeUri: 
      Role: !GetAtt GetGoforLambdaRole.Arn
      Environment:
        Variables:
          DYNAMODB_TABLE: !Ref GoForTable
      Timeout: 300
      MemorySize: 2048
      Events:
      GetRequestById:
        Type: Api
        Properties:
          RestApiId: !Ref GetGoforApi
          Path: 
          Method: get
  
  GoforLoginLambda:
    Type: AWS:Serverless::Function
    Properties:
      FunctionName: GoforLoginLambda
      Handler: 
      Runtime: java8
      CodeUri: 
      Role: !GetAtt GoforLoginLambdaRole.Arn
      Environment:
        Variables:
          DYNAMODB_TABLE: !Ref GoForLoginTable
      Timeout: 300
      MemorySize: 2048
